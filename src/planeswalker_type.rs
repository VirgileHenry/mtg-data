#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub enum PlaneswalkerType {
    Abian,
    Ajani,
    Aminatou,
    Angrath,
    Arlinn,
    Ashiok,
    Bob,
    Bahamut,
    Basri,
    Bolas,
    Calix,
    Chandra,
    Comet,
    Dack,
    Dakkon,
    Daretti,
    Davriel,
    Deb,
    Dihada,
    Domri,
    Dovin,
    Duck,
    Dungeon,
    Ellywick,
    Elminster,
    Elspeth,
    Equipment,
    Ersta,
    Estrid,
    Freyalise,
    Garruk,
    Gideon,
    Grist,
    Guff,
    Huatli,
    Inzerva,
    Jace,
    Jared,
    Jaya,
    Jeska,
    Kaito,
    Karn,
    Kasmina,
    Kaya,
    Kiora,
    Koth,
    Liliana,
    Lolth,
    Lukka,
    Luxior,
    Master,
    Minsc,
    Mordenkainen,
    Nahiri,
    Narset,
    Niko,
    Nissa,
    Nixilis,
    Oko,
    Quintorius,
    Ral,
    Rowan,
    Saheeli,
    Samut,
    Sarkhan,
    Serra,
    Sivitri,
    Sorin,
    Svega,
    Szat,
    Tamiyo,
    Tasha,
    Teferi,
    Teyo,
    Tezzeret,
    Tibalt,
    Tyvar,
    Ugin,
    Urza,
    Venser,
    Vivien,
    Vraska,
    Vronos,
    Wanderer,
    Will,
    Windgrace,
    Wrenn,
    Xenagos,
    Yanggu,
    Yanling,
    Zariel,
}
impl std::str::FromStr for PlaneswalkerType {
    type Err = String;
    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "Abian" => Ok(Self::Abian),
            "Ajani" => Ok(Self::Ajani),
            "Aminatou" => Ok(Self::Aminatou),
            "Angrath" => Ok(Self::Angrath),
            "Arlinn" => Ok(Self::Arlinn),
            "Ashiok" => Ok(Self::Ashiok),
            "B.O.B." => Ok(Self::Bob),
            "Bahamut" => Ok(Self::Bahamut),
            "Basri" => Ok(Self::Basri),
            "Bolas" => Ok(Self::Bolas),
            "Calix" => Ok(Self::Calix),
            "Chandra" => Ok(Self::Chandra),
            "Comet" => Ok(Self::Comet),
            "Dack" => Ok(Self::Dack),
            "Dakkon" => Ok(Self::Dakkon),
            "Daretti" => Ok(Self::Daretti),
            "Davriel" => Ok(Self::Davriel),
            "Deb" => Ok(Self::Deb),
            "Dihada" => Ok(Self::Dihada),
            "Domri" => Ok(Self::Domri),
            "Dovin" => Ok(Self::Dovin),
            "Duck" => Ok(Self::Duck),
            "Dungeon" => Ok(Self::Dungeon),
            "Ellywick" => Ok(Self::Ellywick),
            "Elminster" => Ok(Self::Elminster),
            "Elspeth" => Ok(Self::Elspeth),
            "Equipment" => Ok(Self::Equipment),
            "Ersta" => Ok(Self::Ersta),
            "Estrid" => Ok(Self::Estrid),
            "Freyalise" => Ok(Self::Freyalise),
            "Garruk" => Ok(Self::Garruk),
            "Gideon" => Ok(Self::Gideon),
            "Grist" => Ok(Self::Grist),
            "Guff" => Ok(Self::Guff),
            "Huatli" => Ok(Self::Huatli),
            "Inzerva" => Ok(Self::Inzerva),
            "Jace" => Ok(Self::Jace),
            "Jared" => Ok(Self::Jared),
            "Jaya" => Ok(Self::Jaya),
            "Jeska" => Ok(Self::Jeska),
            "Kaito" => Ok(Self::Kaito),
            "Karn" => Ok(Self::Karn),
            "Kasmina" => Ok(Self::Kasmina),
            "Kaya" => Ok(Self::Kaya),
            "Kiora" => Ok(Self::Kiora),
            "Koth" => Ok(Self::Koth),
            "Liliana" => Ok(Self::Liliana),
            "Lolth" => Ok(Self::Lolth),
            "Lukka" => Ok(Self::Lukka),
            "Luxior" => Ok(Self::Luxior),
            "Master" => Ok(Self::Master),
            "Minsc" => Ok(Self::Minsc),
            "Mordenkainen" => Ok(Self::Mordenkainen),
            "Nahiri" => Ok(Self::Nahiri),
            "Narset" => Ok(Self::Narset),
            "Niko" => Ok(Self::Niko),
            "Nissa" => Ok(Self::Nissa),
            "Nixilis" => Ok(Self::Nixilis),
            "Oko" => Ok(Self::Oko),
            "Quintorius" => Ok(Self::Quintorius),
            "Ral" => Ok(Self::Ral),
            "Rowan" => Ok(Self::Rowan),
            "Saheeli" => Ok(Self::Saheeli),
            "Samut" => Ok(Self::Samut),
            "Sarkhan" => Ok(Self::Sarkhan),
            "Serra" => Ok(Self::Serra),
            "Sivitri" => Ok(Self::Sivitri),
            "Sorin" => Ok(Self::Sorin),
            "Svega" => Ok(Self::Svega),
            "Szat" => Ok(Self::Szat),
            "Tamiyo" => Ok(Self::Tamiyo),
            "Tasha" => Ok(Self::Tasha),
            "Teferi" => Ok(Self::Teferi),
            "Teyo" => Ok(Self::Teyo),
            "Tezzeret" => Ok(Self::Tezzeret),
            "Tibalt" => Ok(Self::Tibalt),
            "Tyvar" => Ok(Self::Tyvar),
            "Ugin" => Ok(Self::Ugin),
            "Urza" => Ok(Self::Urza),
            "Venser" => Ok(Self::Venser),
            "Vivien" => Ok(Self::Vivien),
            "Vraska" => Ok(Self::Vraska),
            "Vronos" => Ok(Self::Vronos),
            "Wanderer" => Ok(Self::Wanderer),
            "Will" => Ok(Self::Will),
            "Windgrace" => Ok(Self::Windgrace),
            "Wrenn" => Ok(Self::Wrenn),
            "Xenagos" => Ok(Self::Xenagos),
            "Yanggu" => Ok(Self::Yanggu),
            "Yanling" => Ok(Self::Yanling),
            "Zariel" => Ok(Self::Zariel),
            other => Err(format!("Unknown PlaneswalkerType: {}", other.to_string())),
        }
    }
}
impl PlaneswalkerType {
    fn as_str(&self) -> &'static str {
        match self {
            Self::Abian => "Abian",
            Self::Ajani => "Ajani",
            Self::Aminatou => "Aminatou",
            Self::Angrath => "Angrath",
            Self::Arlinn => "Arlinn",
            Self::Ashiok => "Ashiok",
            Self::Bob => "B.O.B.",
            Self::Bahamut => "Bahamut",
            Self::Basri => "Basri",
            Self::Bolas => "Bolas",
            Self::Calix => "Calix",
            Self::Chandra => "Chandra",
            Self::Comet => "Comet",
            Self::Dack => "Dack",
            Self::Dakkon => "Dakkon",
            Self::Daretti => "Daretti",
            Self::Davriel => "Davriel",
            Self::Deb => "Deb",
            Self::Dihada => "Dihada",
            Self::Domri => "Domri",
            Self::Dovin => "Dovin",
            Self::Duck => "Duck",
            Self::Dungeon => "Dungeon",
            Self::Ellywick => "Ellywick",
            Self::Elminster => "Elminster",
            Self::Elspeth => "Elspeth",
            Self::Equipment => "Equipment",
            Self::Ersta => "Ersta",
            Self::Estrid => "Estrid",
            Self::Freyalise => "Freyalise",
            Self::Garruk => "Garruk",
            Self::Gideon => "Gideon",
            Self::Grist => "Grist",
            Self::Guff => "Guff",
            Self::Huatli => "Huatli",
            Self::Inzerva => "Inzerva",
            Self::Jace => "Jace",
            Self::Jared => "Jared",
            Self::Jaya => "Jaya",
            Self::Jeska => "Jeska",
            Self::Kaito => "Kaito",
            Self::Karn => "Karn",
            Self::Kasmina => "Kasmina",
            Self::Kaya => "Kaya",
            Self::Kiora => "Kiora",
            Self::Koth => "Koth",
            Self::Liliana => "Liliana",
            Self::Lolth => "Lolth",
            Self::Lukka => "Lukka",
            Self::Luxior => "Luxior",
            Self::Master => "Master",
            Self::Minsc => "Minsc",
            Self::Mordenkainen => "Mordenkainen",
            Self::Nahiri => "Nahiri",
            Self::Narset => "Narset",
            Self::Niko => "Niko",
            Self::Nissa => "Nissa",
            Self::Nixilis => "Nixilis",
            Self::Oko => "Oko",
            Self::Quintorius => "Quintorius",
            Self::Ral => "Ral",
            Self::Rowan => "Rowan",
            Self::Saheeli => "Saheeli",
            Self::Samut => "Samut",
            Self::Sarkhan => "Sarkhan",
            Self::Serra => "Serra",
            Self::Sivitri => "Sivitri",
            Self::Sorin => "Sorin",
            Self::Svega => "Svega",
            Self::Szat => "Szat",
            Self::Tamiyo => "Tamiyo",
            Self::Tasha => "Tasha",
            Self::Teferi => "Teferi",
            Self::Teyo => "Teyo",
            Self::Tezzeret => "Tezzeret",
            Self::Tibalt => "Tibalt",
            Self::Tyvar => "Tyvar",
            Self::Ugin => "Ugin",
            Self::Urza => "Urza",
            Self::Venser => "Venser",
            Self::Vivien => "Vivien",
            Self::Vraska => "Vraska",
            Self::Vronos => "Vronos",
            Self::Wanderer => "Wanderer",
            Self::Will => "Will",
            Self::Windgrace => "Windgrace",
            Self::Wrenn => "Wrenn",
            Self::Xenagos => "Xenagos",
            Self::Yanggu => "Yanggu",
            Self::Yanling => "Yanling",
            Self::Zariel => "Zariel",
        }
    }
}
impl std::fmt::Display for PlaneswalkerType {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(f, "{}", self.as_str())
    }
}
impl PlaneswalkerType {
    pub fn all() -> impl Iterator<Item = Self> {
        [
            Self::Abian,
            Self::Ajani,
            Self::Aminatou,
            Self::Angrath,
            Self::Arlinn,
            Self::Ashiok,
            Self::Bob,
            Self::Bahamut,
            Self::Basri,
            Self::Bolas,
            Self::Calix,
            Self::Chandra,
            Self::Comet,
            Self::Dack,
            Self::Dakkon,
            Self::Daretti,
            Self::Davriel,
            Self::Deb,
            Self::Dihada,
            Self::Domri,
            Self::Dovin,
            Self::Duck,
            Self::Dungeon,
            Self::Ellywick,
            Self::Elminster,
            Self::Elspeth,
            Self::Equipment,
            Self::Ersta,
            Self::Estrid,
            Self::Freyalise,
            Self::Garruk,
            Self::Gideon,
            Self::Grist,
            Self::Guff,
            Self::Huatli,
            Self::Inzerva,
            Self::Jace,
            Self::Jared,
            Self::Jaya,
            Self::Jeska,
            Self::Kaito,
            Self::Karn,
            Self::Kasmina,
            Self::Kaya,
            Self::Kiora,
            Self::Koth,
            Self::Liliana,
            Self::Lolth,
            Self::Lukka,
            Self::Luxior,
            Self::Master,
            Self::Minsc,
            Self::Mordenkainen,
            Self::Nahiri,
            Self::Narset,
            Self::Niko,
            Self::Nissa,
            Self::Nixilis,
            Self::Oko,
            Self::Quintorius,
            Self::Ral,
            Self::Rowan,
            Self::Saheeli,
            Self::Samut,
            Self::Sarkhan,
            Self::Serra,
            Self::Sivitri,
            Self::Sorin,
            Self::Svega,
            Self::Szat,
            Self::Tamiyo,
            Self::Tasha,
            Self::Teferi,
            Self::Teyo,
            Self::Tezzeret,
            Self::Tibalt,
            Self::Tyvar,
            Self::Ugin,
            Self::Urza,
            Self::Venser,
            Self::Vivien,
            Self::Vraska,
            Self::Vronos,
            Self::Wanderer,
            Self::Will,
            Self::Windgrace,
            Self::Wrenn,
            Self::Xenagos,
            Self::Yanggu,
            Self::Yanling,
            Self::Zariel,
        ]
        .into_iter()
    }
}
