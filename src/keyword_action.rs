#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub enum KeywordAction {
    Abandon,
    Activate,
    Adapt,
    Amass,
    Assemble,
    Attach,
    Behold,
    Bolster,
    Cast,
    Clash,
    Cloak,
    CollectEvidence,
    Conjure,
    Connive,
    Convert,
    Counter,
    Create,
    Destroy,
    Detain,
    Discard,
    Discover,
    Double,
    Endure,
    Exchange,
    Exert,
    Exile,
    Explore,
    Fateseal,
    Fight,
    Food,
    Forage,
    Goad,
    Heist,
    Incubate,
    Investigate,
    Learn,
    Manifest,
    ManifestDread,
    Meld,
    Mill,
    Monstrosity,
    OpenAnAttraction,
    Planeswalk,
    Play,
    Plot,
    Populate,
    Proliferate,
    Regenerate,
    Reveal,
    RoleToken,
    RollToVisitYourAttractions,
    Sacrifice,
    Scry,
    Seek,
    SetInMotion,
    Shuffle,
    Support,
    Surveil,
    Suspect,
    Tap,
    TimeTravel,
    Transform,
    Treasure,
    Untap,
    VentureIntoTheDungeon,
    Vote,
}
impl std::str::FromStr for KeywordAction {
    type Err = String;
    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "Abandon" => Ok(Self::Abandon),
            "Activate" => Ok(Self::Activate),
            "Adapt" => Ok(Self::Adapt),
            "Amass" => Ok(Self::Amass),
            "Assemble" => Ok(Self::Assemble),
            "Attach" => Ok(Self::Attach),
            "Behold" => Ok(Self::Behold),
            "Bolster" => Ok(Self::Bolster),
            "Cast" => Ok(Self::Cast),
            "Clash" => Ok(Self::Clash),
            "Cloak" => Ok(Self::Cloak),
            "Collect evidence" => Ok(Self::CollectEvidence),
            "Conjure" => Ok(Self::Conjure),
            "Connive" => Ok(Self::Connive),
            "Convert" => Ok(Self::Convert),
            "Counter" => Ok(Self::Counter),
            "Create" => Ok(Self::Create),
            "Destroy" => Ok(Self::Destroy),
            "Detain" => Ok(Self::Detain),
            "Discard" => Ok(Self::Discard),
            "Discover" => Ok(Self::Discover),
            "Double" => Ok(Self::Double),
            "Endure" => Ok(Self::Endure),
            "Exchange" => Ok(Self::Exchange),
            "Exert" => Ok(Self::Exert),
            "Exile" => Ok(Self::Exile),
            "Explore" => Ok(Self::Explore),
            "Fateseal" => Ok(Self::Fateseal),
            "Fight" => Ok(Self::Fight),
            "Food" => Ok(Self::Food),
            "Forage" => Ok(Self::Forage),
            "Goad" => Ok(Self::Goad),
            "Heist" => Ok(Self::Heist),
            "Incubate" => Ok(Self::Incubate),
            "Investigate" => Ok(Self::Investigate),
            "Learn" => Ok(Self::Learn),
            "Manifest" => Ok(Self::Manifest),
            "Manifest dread" => Ok(Self::ManifestDread),
            "Meld" => Ok(Self::Meld),
            "Mill" => Ok(Self::Mill),
            "Monstrosity" => Ok(Self::Monstrosity),
            "Open an Attraction" => Ok(Self::OpenAnAttraction),
            "Planeswalk" => Ok(Self::Planeswalk),
            "Play" => Ok(Self::Play),
            "Plot" => Ok(Self::Plot),
            "Populate" => Ok(Self::Populate),
            "Proliferate" => Ok(Self::Proliferate),
            "Regenerate" => Ok(Self::Regenerate),
            "Reveal" => Ok(Self::Reveal),
            "Role token" => Ok(Self::RoleToken),
            "Roll to Visit Your Attractions" => Ok(Self::RollToVisitYourAttractions),
            "Sacrifice" => Ok(Self::Sacrifice),
            "Scry" => Ok(Self::Scry),
            "Seek" => Ok(Self::Seek),
            "Set in motion" => Ok(Self::SetInMotion),
            "Shuffle" => Ok(Self::Shuffle),
            "Support" => Ok(Self::Support),
            "Surveil" => Ok(Self::Surveil),
            "Suspect" => Ok(Self::Suspect),
            "Tap" => Ok(Self::Tap),
            "Time Travel" => Ok(Self::TimeTravel),
            "Transform" => Ok(Self::Transform),
            "Treasure" => Ok(Self::Treasure),
            "Untap" => Ok(Self::Untap),
            "Venture into the dungeon" => Ok(Self::VentureIntoTheDungeon),
            "Vote" => Ok(Self::Vote),
            other => Err(format!("Unknown KeywordAction: {}", other.to_string())),
        }
    }
}
impl KeywordAction {
    fn as_str(&self) -> &'static str {
        match self {
            Self::Abandon => "Abandon",
            Self::Activate => "Activate",
            Self::Adapt => "Adapt",
            Self::Amass => "Amass",
            Self::Assemble => "Assemble",
            Self::Attach => "Attach",
            Self::Behold => "Behold",
            Self::Bolster => "Bolster",
            Self::Cast => "Cast",
            Self::Clash => "Clash",
            Self::Cloak => "Cloak",
            Self::CollectEvidence => "Collect evidence",
            Self::Conjure => "Conjure",
            Self::Connive => "Connive",
            Self::Convert => "Convert",
            Self::Counter => "Counter",
            Self::Create => "Create",
            Self::Destroy => "Destroy",
            Self::Detain => "Detain",
            Self::Discard => "Discard",
            Self::Discover => "Discover",
            Self::Double => "Double",
            Self::Endure => "Endure",
            Self::Exchange => "Exchange",
            Self::Exert => "Exert",
            Self::Exile => "Exile",
            Self::Explore => "Explore",
            Self::Fateseal => "Fateseal",
            Self::Fight => "Fight",
            Self::Food => "Food",
            Self::Forage => "Forage",
            Self::Goad => "Goad",
            Self::Heist => "Heist",
            Self::Incubate => "Incubate",
            Self::Investigate => "Investigate",
            Self::Learn => "Learn",
            Self::Manifest => "Manifest",
            Self::ManifestDread => "Manifest dread",
            Self::Meld => "Meld",
            Self::Mill => "Mill",
            Self::Monstrosity => "Monstrosity",
            Self::OpenAnAttraction => "Open an Attraction",
            Self::Planeswalk => "Planeswalk",
            Self::Play => "Play",
            Self::Plot => "Plot",
            Self::Populate => "Populate",
            Self::Proliferate => "Proliferate",
            Self::Regenerate => "Regenerate",
            Self::Reveal => "Reveal",
            Self::RoleToken => "Role token",
            Self::RollToVisitYourAttractions => "Roll to Visit Your Attractions",
            Self::Sacrifice => "Sacrifice",
            Self::Scry => "Scry",
            Self::Seek => "Seek",
            Self::SetInMotion => "Set in motion",
            Self::Shuffle => "Shuffle",
            Self::Support => "Support",
            Self::Surveil => "Surveil",
            Self::Suspect => "Suspect",
            Self::Tap => "Tap",
            Self::TimeTravel => "Time Travel",
            Self::Transform => "Transform",
            Self::Treasure => "Treasure",
            Self::Untap => "Untap",
            Self::VentureIntoTheDungeon => "Venture into the dungeon",
            Self::Vote => "Vote",
        }
    }
}
impl std::fmt::Display for KeywordAction {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(f, "{}", self.as_str())
    }
}
impl KeywordAction {
    pub fn all() -> impl Iterator<Item = Self> {
        [
            Self::Abandon,
            Self::Activate,
            Self::Adapt,
            Self::Amass,
            Self::Assemble,
            Self::Attach,
            Self::Behold,
            Self::Bolster,
            Self::Cast,
            Self::Clash,
            Self::Cloak,
            Self::CollectEvidence,
            Self::Conjure,
            Self::Connive,
            Self::Convert,
            Self::Counter,
            Self::Create,
            Self::Destroy,
            Self::Detain,
            Self::Discard,
            Self::Discover,
            Self::Double,
            Self::Endure,
            Self::Exchange,
            Self::Exert,
            Self::Exile,
            Self::Explore,
            Self::Fateseal,
            Self::Fight,
            Self::Food,
            Self::Forage,
            Self::Goad,
            Self::Heist,
            Self::Incubate,
            Self::Investigate,
            Self::Learn,
            Self::Manifest,
            Self::ManifestDread,
            Self::Meld,
            Self::Mill,
            Self::Monstrosity,
            Self::OpenAnAttraction,
            Self::Planeswalk,
            Self::Play,
            Self::Plot,
            Self::Populate,
            Self::Proliferate,
            Self::Regenerate,
            Self::Reveal,
            Self::RoleToken,
            Self::RollToVisitYourAttractions,
            Self::Sacrifice,
            Self::Scry,
            Self::Seek,
            Self::SetInMotion,
            Self::Shuffle,
            Self::Support,
            Self::Surveil,
            Self::Suspect,
            Self::Tap,
            Self::TimeTravel,
            Self::Transform,
            Self::Treasure,
            Self::Untap,
            Self::VentureIntoTheDungeon,
            Self::Vote,
        ]
        .into_iter()
    }
}
